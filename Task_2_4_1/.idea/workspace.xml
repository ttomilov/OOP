<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f3730cd5-72ba-4733-b598-9f8ad83c8b39" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/8.10/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/8.10/executionHistory/executionHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/8.10/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/8.10/executionHistory/executionHistory.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/8.10/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/8.10/fileHashes/fileHashes.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/8.10/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/8.10/fileHashes/fileHashes.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/repositories/nkrainov/OOP/Task_2_1_1/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/repositories/ttomilov/OOP/Task_2_2_1/logs/pizzeria.log" beforeDir="false" afterPath="$PROJECT_DIR$/repositories/ttomilov/OOP/Task_2_2_1/logs/pizzeria.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/Controller.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/Controller.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/test/kotlin/ControllerTest.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/kotlin/ControllerTest.kt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;ttomilov&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/ttomilov/OOP.git&quot;,
    &quot;accountId&quot;: &quot;f75db85e-2317-4d58-bf77-63157dca0134&quot;
  }
}</component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2wiHa6sfRQ4Mzz7qOQbCX5ryL5k" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Gradle.Build Task_2_4_1.executor": "Run",
    "Gradle.ControllerTest.executor": "Run",
    "Gradle.ControllerTest.should check all tasks for all students.executor": "Run",
    "Gradle.ControllerTest.should check specific task for specific student.executor": "Run",
    "Gradle.ControllerTest.should print error on invalid args.executor": "Run",
    "Gradle.Task_2_4_1.executor": "Run",
    "Kotlin.oop-checker.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.TerminalTabsStorage.copyFrom.TerminalArrangementManager": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "#11 on Task__2__4__1",
    "last_opened_file_path": "/home/ttomilov/OOP/Task_2_4_1/src/test/resources",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "onboarding.tips.debug.path": "/media/ttomilov/Timofey/University/Programming/Java/OOP/Task_2_4_1/src/main/kotlin/Main.kt",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "editor.preferences.fonts.default",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/test/resources" />
      <recent name="$PROJECT_DIR$/src/main/resources" />
      <recent name="$PROJECT_DIR$/src/main/kotlin" />
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Gradle.ControllerTest.should check specific task for specific student">
    <configuration name="ControllerTest.should check all tasks for all students" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.dsl.ControllerTest.should check all tasks for all students&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ControllerTest.should check specific task for specific student" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.dsl.ControllerTest.should check specific task for specific student&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="ControllerTest.should print error on invalid args" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":test" />
            <option value="--tests" />
            <option value="&quot;org.dsl.ControllerTest.should print error on invalid args&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="oop-checker" type="JetRunConfigurationType">
      <option name="MAIN_CLASS_NAME" value="org.dsl.MainKt" />
      <module name="Task_2_4_1.main" />
      <option name="PROGRAM_PARAMETERS" value="--check" />
      <shortenClasspath name="NONE" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Gradle.ControllerTest.should check all tasks for all students" />
      <item itemvalue="Gradle.ControllerTest.should check specific task for specific student" />
      <item itemvalue="Gradle.ControllerTest.should print error on invalid args" />
      <item itemvalue="Kotlin.oop-checker" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.ControllerTest.should check specific task for specific student" />
        <item itemvalue="Gradle.ControllerTest.should check all tasks for all students" />
        <item itemvalue="Gradle.ControllerTest.should print error on invalid args" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.25410.129" />
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-IU-251.25410.129" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f3730cd5-72ba-4733-b598-9f8ad83c8b39" name="Changes" comment="" />
      <created>1746517537840</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1746517537840</updated>
      <workItem from="1746517539789" duration="1213000" />
      <workItem from="1746518772597" duration="9695000" />
      <workItem from="1746595382170" duration="18000" />
      <workItem from="1746596061884" duration="1403000" />
      <workItem from="1746603513374" duration="96000" />
      <workItem from="1746603791641" duration="2792000" />
      <workItem from="1747033774435" duration="8754000" />
      <workItem from="1747203093825" duration="782000" />
      <workItem from="1747204047004" duration="13547000" />
      <workItem from="1747222193322" duration="491000" />
      <workItem from="1747222874215" duration="155000" />
      <workItem from="1747275867357" duration="345000" />
      <workItem from="1747276331165" duration="3349000" />
      <workItem from="1747285296355" duration="10574000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>