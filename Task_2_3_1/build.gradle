plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '2.26.0'
}

group = 'org.main.snake_game'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.jacocoTestReport {
    reports {
        xml.required = true
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.2.1') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withSourcesJar()
}

tasks.named('compileJava') {
    options.encoding = 'UTF-8'
}

application {
    mainClass = 'org.main.snake_game.Main'
    mainModule = 'org.main.snake_game'
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml']
}

jlink {
    imageZip = layout.buildDirectory.file("distributions/app-${javafx.platform.classifier}.zip").get().asFile
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'snake-game'
        jvmArgs = ['-Dfile.encoding=UTF-8']
    }

    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser']
        }
    }
}